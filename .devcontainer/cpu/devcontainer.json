// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.209.6/containers/cpp
{
	"name": "CPU Environment",
	"build": {
		"dockerfile": "Dockerfile",
	},
	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined"
	],
	// Set *default* container specific settings.json values on container create.
	"customizations": {
		"vscode": {
			"settings": {
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
					"source.organizeImports": true
				},
				"editor.defaultFormatter": "xaver.clang-format",
				"files.insertFinalNewline": true,
				"python.analysis.exclude": ["."],
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": false,
				"python.linting.flake8Enabled": true,
				"python.linting.mypyEnabled": true,
				"python.formatting.provider": "black",
				"python.terminal.activateEnvironment": false,
				// CAVEAT: you need to restart after building scaluq to take effect.
				"C_Cpp.default.includePath": [
					"include",
					"/usr/local/include/kokkos",
					"build/_deps/eigen-src",
					"build/_deps/googletest-src/googletest/include",
					"build/_deps/json-src/include",
					"/usr/local/lib/python3.10/dist-packages/nanobind/include/",
					"/usr/include/python3.10"
				],
				"C_Cpp.default.cppStandard": "c++23",
				"C_Cpp.default.defines": ["SCALUQ_FLOAT16", "SCALUQ_FLOAT32", "SCALUQ_FLOAT64", "SCALUQ_BFLOAT16", "SCALUQ_USE_NANOBIND"],
                "cSpell.words": [
                    "arnoldi",
                    "autoapi",
                    "autoremove",
                    "BFLOAT",
                    "braket",
                    "ccache",
                    "ccircuit",
                    "cibuildwheel",
                    "cibw",
                    "CNOT",
                    "coef",
                    "coefs",
                    "constexpr",
                    "cout",
                    "cpptools",
                    "cstdint",
                    "ctrz",
                    "ctest",
                    "cuda",
                    "DCMAKE",
                    "DEIGEN_NO_CUDA",
                    "Dephasing",
                    "devcontainers",
                    "devel",
                    "dylib",
                    "eigen",
                    "endforeach",
                    "endfunction",
                    "endl",
                    "errorlevel",
                    "expt-relaxed-constexpr",
                    "fopenmp",
                    "fsanitize",
                    "genindex",
                    "googletest",
                    "GROUPNAME",
                    "gtest",
                    "Hadamard",
                    "hendrikmuhs",
                    "IBMQ",
                    "IBMQ's",
                    "icircuit",
                    "icoef",
                    "ipcircuit",
                    "isort",
                    "Jimver",
                    "Kokkos",
                    "kokkosalgorithms",
                    "kokkoscontainers",
                    "kokkoscore",
                    "kokkossimd",
                    "kwargs",
                    "libboost-dev",
                    "LIBDL",
                    "libexec",
                    "libpython",
                    "lsum",
                    "lukka",
                    "manylinux",
                    "mathjax",
                    "mathrm",
                    "mgate",
                    "modindex",
                    "mypy",
                    "nanobind",
                    "ndarray",
                    "nlohmann",
                    "noninteractive",
                    "NOPASSWD",
                    "nqubits",
                    "nshot",
                    "numpy",
                    "nvcc",
                    "OPENMP",
                    "paulis",
                    "pcircuit",
                    "pcoef",
                    "pgate",
                    "physicalcpu",
                    "popd",
                    "ppauli",
                    "PREC",
                    "probgate",
                    "probs",
                    "pthread",
                    "pushd",
                    "pylance",
                    "pylint",
                    "PYPI",
                    "PYTHONPATH",
                    "qubit",
                    "qubits",
                    "qulacs",
                    "revcircuit",
                    "SABI",
                    "scaluq",
                    "scikit",
                    "scipy",
                    "Sdag",
                    "sdist",
                    "seccomp",
                    "setuptools",
                    "SKBUILD",
                    "smod",
                    "SOURCEDIR",
                    "SPHINXBUILD",
                    "sphinxcontrib",
                    "SPHINXOPTS",
                    "sqrtx",
                    "sqrtxdag",
                    "sqrty",
                    "sqrtydag",
                    "STREQUAL",
                    "stubgen",
                    "Tdag",
                    "toctree",
                    "Toffoli",
                    "typehints",
                    "undoc",
                    "Werror",
                    "Wextra",
                    "Wshadow",
                    "Wsign-compare",
                    "Wtype-limits",
                    "Wuninitialized",
                    "Wunused",
                    "xaver",
                    "xcoef",
                    "Xdag",
                    "ycoef",
                    "Ydag",
                    "zcoef"
                ]
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-vscode.cpptools-extension-pack",
				"ms-vscode.cmake-tools",
				"ms-python.python",
				"ms-python.vscode-pylance",
				"xaver.clang-format",
				"streetsidesoftware.code-spell-checker"
			]
		}
	},

	// Required by `mounts`.
	// c.f. https://code.visualstudio.com/remote/advancedcontainers/improve-performance#_use-a-targeted-named-volume
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspaces/scaluq,type=bind,consistency=cached",
	"workspaceFolder": "/workspaces/scaluq",
	"mounts": [
		"source=${localWorkspaceFolderBasename}-build,target=${containerWorkspaceFolder}/build,type=volume"
	],
	// A location of gpg might differ from host machine's git config.
	// This config accepts string or array. If you use array form destructure command like following; not a list of commands.
	// ["echo", "hello"]
	"postStartCommand": "/usr/bin/git config --global gpg.program /usr/bin/gpg && git config --global safe.directory /workspaces/scaluq && sudo chown vscode build",
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "gcc -v",
	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
}
